angular.module("kanban.templates",[]),angular.module("kanban",["component.kanban-model","ngAnimate","ngTouch","component.scrollable-element","kanban.templates","component.kanban-board","component.task-groups.task-groups-button","component.add-new-control","as.sortable","mm.foundation","component.task-groups.task-group","component.task-groups.task-group-list","component.column-names","component.kanban-header","component.swim-lane","component.scroll-bar","component.star-rating","component.priority-level","component.expand-collapse","component.stickyHeader","component.add-dropdown","component.sanitize-filter","kanban-constant"]).run(["$log","kanbanVersion",function(n,a){a&&n.info("rl-kanban version: v"+a)}]),angular.module("kanban-constant",[]).constant("kanbanVersion",!1),angular.module("component.kanban-model",[]),angular.module("component.scroll-bar",[]),angular.module("component.task-groups.task-group",["component.glyph-icon","component.task-groups.task-group-list","component.modal.task-group-modal"]),angular.module("kanban").directive("kanban",["$window","$document","isTouch","globalOnEsc",function(n,a,t,e){return{scope:{config:"="},replace:!0,templateUrl:"app/kanban.html",controller:["$scope",function(n){function s(a){a.validStates&&a.validStates.length&&n.config.swimlanes.forEach(function(n){n.columns.filter(function(n){return!n.$barred}).filter(function(n){return-1===a.validStates.indexOf(n.id)}).forEach(function(n){n.$barred=!0})})}var o=[],l=a.find("body").eq(0);n.isTouch=t,n.$on("$destroy",e(function(){n.config&&!l.hasClass("modal-open")&&(n.config.tasks.forEach(function(n){delete n.$highlight,n.group&&n.group.$highlightedGroup&&delete n.group.$highlightedGroup}),n.$digest())})),this.getHighlighted=function(){var a=n.config.settings.enableMultiSelect;return n.config.tasks.filter(function(n){return a?n.$highlight:n.$lastHighlight})},this.highlightTask=function(a){n.config.tasks.forEach(function(n){n.$highlight=!1,n.$lastHighlight=!1}),a.$highlight=!0,a.$lastHighlight=!0,n.$evalAsync()},o=[],this.registerElement=function(a,t){o.push(a),n.config&&n.config.columns&&a.css("width",228*n.config.columns.length+"px"),t.$on("destroy",function(){o.splice(o.indexOf(a),1)})},n.$watch("config.columns",function(n){n=n||[],o.forEach(function(a){a.css("width",228*n.length+"px")})}),this.validateColumns=s,this.validateStates=function(a){n.config.settings.highlightTaskOnClick?this.getHighlighted().forEach(function(n){s(n)}):this.validateColumns(a)},this.clearInvalidStates=function(){n.config.swimlanes.forEach(function(n){n.columns.filter(function(n){return n.$barred}).forEach(function(n){n.$barred=!1})})},this.checkEditableSwimlanes=function(){n.config.swimlanes.filter(function(n){return n.$edit}).forEach(function(n){n.cancelEdit()})},this.toggleColumn=function(a){n.config.swimlanes.forEach(function(n){n.columns.filter(function(n){return n.id===a}).forEach(function(n){n.$collapsed?n.expand():n.collapse()})})}}]}}]).config(["$httpProvider",function(n){n.useApplyAsync(!0)}]),angular.module("component.add-dropdown",[]).directive("addDropdown",function(){return{scope:{settings:"=",groups:"="},templateUrl:"app/component/add-dropdown/add-dropdown.html"}}),angular.module("component.add-new-control",[]).directive("addNewControl",function(){return{templateUrl:"app/component/add-new-control/add-new-control.html",scope:!0,link:function(n){n.addTask=function(){n.$emit("addTask")},n.addGroup=function(){n.$emit("addGroup")}}}}),angular.module("component.column-names",["mm.foundation.tooltip","mm.foundation.position","mm.foundation.bindHtml","ie-9-fixes"]).directive("columnNames",function(){return{scope:{columns:"=",settings:"="},require:"^kanban",templateUrl:"app/component/column-names/column-names.html",link:function(n,a,t,e){n.toggleColumn=function(a){return n.settings.showHideColumns?(a.$collapsed=!a.$collapsed,n.$emit(a.$collapsed?"kanban:column:hide":"kanban:column:show",a.id),e.toggleColumn(a.id)):void 0}}}}),angular.module("component.expand-collapse",[]).directive("expandCollapse",["$animate","$parse",function(n,a){return{link:function(t,e,s){function o(a){a?(e.removeClass("kanban-collapse").addClass("kanban-collapsing"),n.addClass(e,"kanban-in",{to:{height:e[0].scrollHeight+"px"}}).then(function(){e.removeClass("kanban-collapsing"),e.css({height:"auto"})})):(e.css({height:e[0].scrollHeight+"px"}).removeClass("kanban-collapse").addClass("kanban-collapsing"),n.removeClass(e,"kanban-in",{to:{height:"0"}}).then(function(){e.css({height:"0"}),e.removeClass("kanban-collapsing"),e.addClass("kanban-collapse")}))}var l=a(s.expandDisabled)(t);l||t.$watch(s.expandCollapse,o)}}}]),angular.module("component.glyph-icon",[]).directive("glyphIcon",function(){return{templateUrl:"app/component/glyph-icon/glyph-icon.html",scope:{icon:"="}}}),angular.module("component.kanban-board",["component.kanban-column","component.expand-collapse","component.scrollable-element","component.kanban-model","ie-9-fixes"]).directive("kanbanBoard",["$window","KanbanColumn","fixIE9",function(n,a,t){return{templateUrl:"app/component/kanban-board/kanban-board.html",require:["^scrollableElement","^kanban","^horizontalScroll"],scope:{swimlane:"=",settings:"=",limit:"="},replace:!0,link:function(e,s,o,l){function i(){u={scrollTop:s[0].scrollTop,scrollLeft:p.$element[0].scrollLeft,scrollX:n.scrollX,scrollY:n.scrollY}}function r(){u&&(s[0].scrollTop=u.scrollTop,p.$element[0].scrollLeft=u.scrollLeft,n.scrollTo(u.scrollX,u.scrollY))}var c=l[0],d=l[1],p=l[2];e.scrollableElement=c,e.addResources=function(){e.$emit("kanban:add-task-assessment",e.swimlane.id)},e.swimlane.isTeam&&(e.column=new a({tasks:[],swimlane:e.swimlane}));var u;e.scrollCallbacks={containment:e.settings.containment?"#swimlane-"+e.swimlane.index+" .kanban-board":null,dragStart:function(n){i(),t("unselect-text");var a=n.source.itemScope.task;d.activeScrollableElement=c,d.activeScrollableElement.watchMouse(),e.$emit("kanban:task:start",a.id),angular.isDefined(a.group)&&(a.group.$highlightedGroup=!0),e.settings.highlightTaskOnClick&&!a.$highlight&&d.highlightTask(a),a.validStates&&d.validateStates(a),e.settings.editableSwimlanes&&d.checkEditableSwimlanes()},orderChanged:function(n){var a=n.source.itemScope.task;e.$emit("kanban:task:orderchanged",a.id)},dragEnd:function(n){var a=n.source.itemScope.task;e.$emit("kanban:task:stop",a.id),d.activeScrollableElement.stopWatching(),angular.isArray(a.validStates)&&d.clearInvalidStates()},itemMoved:function(n){var a=n.dest.sortableScope.column,t=n.source.itemScope.task;a.$barred&&!a.swimlane.isTeam?(n.dest.sortableScope.removeItem(n.dest.index),n.source.itemScope.sortableScope.insertItem(n.source.index,t),r()):(e.settings.highlightTaskOnClick?d.getHighlighted().forEach(function(n){if(n.moveToColumn(a),n!==t){var e=n.column.tasks;e.splice(e.indexOf(n),1),e.splice(e.indexOf(t)+1,0,n)}}):t.moveToColumn(a),a.swimlane.isTeam&&(a.tasks=[]))},accept:function(n,a){var t=a.scrollableElement;return t&&d.activeScrollableElement!==t&&(d.activeScrollableElement.stopWatching(),d.activeScrollableElement=t,d.activeScrollableElement.watchMouse()),a.column.swimlane.isTeam?!0:a.column.$collapsed?!1:e.settings.acceptTasks?!0:n.column.swimlane.id===a.column.swimlane.id}}}}}]),angular.module("component.kanban-card",["component.glyph-icon","component.modals.task-card-modal","component.modals.confirmation-modal","component.is-touch","component.tool-tip","component.sanitize-filter","ie-9-fixes"]).directive("kanbanCard",["$timeout","$rootScope","$parse","openTaskCard","openConfirmationModal","kanbanCardFields","isTouch","fixIE9",function(n,a,t,e,s,o,l,i){return{templateUrl:"app/component/kanban-card/kanban-card.html",require:"^kanban",link:function(r,c,d,p){r.fields=angular.extend(angular.copy(o),r.settings.tasksDisplayFields),r.clickCallbacks=function(n,a,t){a.stopPropagation(),r.settings.enableMultiSelect&&(a.ctrlKey||a.metaKey)||(r.settings.legacyCardModal&&!t?r.$emit("kanban:task:modalopen",n):n.$edit||e(n,r.settings))},r.highlightTask=function(n,a){i("unselect-text"),!n.$edit&&r.settings.highlightTaskOnClick&&(r.settings.enableMultiSelect?a.ctrlKey||a.metaKey?n.$highlight=!n.$highlight:n.$highlight||p.highlightTask(n):p.highlightTask(n))},r.limit=50,r.showFullDescription=function(n,a,t){n.$edit||(t.stopPropagation(),r.limit=n.notes.length,a.highlightTaskOnClick&&p.highlightTask(n))},r.deleteTask=function(n,t){n.stopPropagation(),s(r).then(function(){t.remove(),a.$broadcast("kanban:task:remove",t.id)})},r.groupColor=t("group.color")(r.task)||null;var u=c.children(),m=r.groupColor||"#326295";if(r.$watch("task.$highlight",function(n){n?(u.addClass("card-highlight"),u.css("borderColor",m)):(u.removeClass("card-highlight"),u.css("borderColor","transparent"))}),l){var g=r.task.column.swimlane;g.$disabled||(g.$disabled=!0);var h=null;c.on("touchstart",function(){h=n(function(){g.$disabled=!1},500)}).on("touchend",function(){g.$disabled=!0,n.cancel(h)});var f=angular.element(c[0].getElementsByClassName("card-handle"));f.on("touchstart",function(){g.$disabled=!1,r.$apply()}).on("touchend",function(){g.$disabled=!0,r.$apply()}),r.$on("$destroy",function(){f.off()})}}}}]).directive("ngLazyClick",["$parse",function(n){return{compile:function(a,t){var e=n(t.ngLazyClick);return function(n,a){a.on("click",function(a){n.$apply(function(){e(n,{$event:a})})})}}}}]),angular.module("component.kanban-column",["component.kanban-card"]).directive("kanbanColumn",["$q","$timeout","$parse",function(n,a,t){return{templateUrl:"app/component/kanban-column/kanban-column.html",restrict:"A",scope:!0,link:function(e){e.limit=0,e.swimlane.$tasksCount+=t("column.tasks.length")(e),e.render=function(){function t(){return e.limit+=s,a(angular.noop,0,!1)}var s=1,o=n.when();return e.swimlane.$loading+=1,e.column.tasks.forEach(function(){o=o.then(t)}),o};var s=e.$watch("swimlane.collapsed",function(n){angular.isDefined(n)&&!n&&(e.render().then(function(){e.swimlane.$loading-=1,e.limit=1/0}),s())})}}}]),angular.module("component.kanban-header",[]).directive("kanbanHeader",function(){return{templateUrl:"app/component/kanban-header/kanban-header.html",scope:{columns:"=",groups:"=",settings:"="}}}),angular.module("component.priority-level",[]).directive("priorityLevel",function(){return{restrict:"E",templateUrl:"app/component/priority-level/priority-level.html",scope:{value:"="}}}),angular.module("component.scroll-bar").directive("combineHorizontalScrolls",function(){return{restrict:"A",controller:function(){var n=[];this.scrollBarElement=null;var a=angular.bind(this,function(a){var t=a.target.scrollLeft,e=this.scrollBarElement.scrollWidth-this.scrollBarElement.clientWidth;n.forEach(function(n){n.scrollLeft!==t&&n!==a.target?n.scrollLeft=t>e?e:t:n.scrollLeft>e&&n===a.target&&(n.scrollLeft=e)})});this.registerScrollElement=function(t){n.push(t[0]),t.on("scroll",a)},this.removeScrollElement=function(t){n.splice(n.indexOf(t[0]),1),t.off("scroll",a)}}}}),angular.module("component.scroll-bar").directive("horizontalScroll",function(){return{restrict:"A",require:"^combineHorizontalScrolls",controller:["$element",function(n){this.$element=n}],link:function(n,a,t,e){e.registerScrollElement(a),n.$on("$destroy",function(){e.removeScrollElement(a)})}}}),angular.module("component.scroll-bar").directive("scrollbar",function(){return{templateUrl:"app/component/scroll-bar/scroll-bar.html",scope:{columns:"="},require:"^combineHorizontalScrolls",link:function(n,a,t,e){e.scrollBarElement=a[0],n.$on("$destroy",function(){e.scrollBarElement=null})}}}).directive("columnsWidth",function(){return{restrict:"A",require:"^kanban",link:function(n,a,t,e){e.registerElement(a,n)}}}),angular.module("component.scrollable-element",[]).directive("scrollableElement",["$window","ScrollableElementFactory",function(n,a){function t(n,a){var t=n-a;return t+o>0?(e=parseInt(s/Math.abs(t))||s,0>=t?10*Math.ceil(e/10):s):o>n?(e=parseInt(s/Math.abs(n))||s,n>=0?10*-Math.ceil(e/10):-s):0}var e,s=75,o=50,l=angular.element(n);return{controller:["$element",function(e){function s(n,a){n=c.scrollLeft&&c.scrollLeft<c.scrollWidth-c.clientWidth-1?n:0,a=c.scrollTop&&c.scrollTop<c.scrollHeight-c.clientHeight-1?a:0,(n||a)&&r(n,a)}function o(n){p=n,d.scrollIfNecessary(n),u.scrollIfNecessary(n)}function i(a){var t=a.touches[0];o({x:t.pageX-n.pageXOffset,y:t.pageY-n.scrollY,clientX:t.clientX,clientY:t.clientY})}var r=angular.noop,c=e[0];this.element=c;var d=new a(function(n,a){c.scrollTop+=a,c.scrollLeft+=n,s(n,a)});d.calculateDot=function(a){this.y=t(n.pageYOffset+a.clientY-c.offsetTop,c.offsetHeight),this.x=t(n.pageXOffset+a.clientX-c.offsetLeft,c.offsetWidth)};var p,u=new a(function(a,t){n.scrollTo(n.pageXOffset+a,n.pageYOffset+t),d.scrollIfNecessary(p)});u.calculateDot=function(a){this.y=t(a.clientY,n.innerHeight),this.x=t(a.clientX,n.innerWidth)},this.watchMouse=function(n){r=n||r,l.on("mousemove",o),l.on("touchmove",i)},this.stopWatching=function(){l.off("mousemove",o),l.off("touchmove",i),d.stopInterval(),u.stopInterval()}}]}}]),angular.module("component.star-rating",[]).directive("starRating",function(){return{restrict:"E",templateUrl:"app/component/star-rating/star-rating.html",scope:{value:"=",max:"=?"},link:function(n){void 0===n.max&&(n.max=5),n.stars=[];for(var a=0;a<n.max;a++)n.stars.push({filled:a<n.value})}}}),angular.module("component.stickyHeader",[]).directive("stickyHeader",["$window",function(n){function a(){return n.document.body.scrollTop||n.document.documentElement.scrollTop}return{link:function(t,e){function s(){i||(r=l.getBoundingClientRect().top+a())}function o(){var n=a();s(),!i&&n>r?(d.css({height:l.offsetHeight+parseInt(c.marginTop)+parseInt(c.marginBottom)+"px"}),e.css({width:l.offsetWidth+"px",position:"fixed",top:0}),i=!0):i&&r>=n&&(d.css({height:""}),e.css({width:"",position:"",top:""}),i=!1)}var l=e[0],i=!1,r=l.getBoundingClientRect().top+a(),c=n.getComputedStyle(l),d=e.wrap("<div></div>").parent(),p=angular.element(n);p.on("scroll",o),p.on("resize",s),t.$on("$destroy",function(){p.off("resize",s),p.off("scroll",o),d.remove()})}}}]),angular.module("component.swim-lane",[]).directive("swimLane",function(){return{templateUrl:"app/component/swim-lane/swim-lane.html",scope:{swimlane:"=",settings:"=",groups:"="},link:function(n,a){n.swimlane.collapsed=angular.isDefined(n.swimlane.collapsed)?n.swimlane.collapsed:!1,n.swimlane.$tasksCount=0,n.swimlane.$loading=0,a.bind("click",function(n){var t=n.target.parentNode,e=a[0];(t===e||t.parentNode===e)&&n.stopPropagation()}),n.toggleCollapse=function(){n.swimlane.collapsed=!n.swimlane.collapsed},n.addResource=function(a){n.groups.length&&n.$emit("kanban:add-task",n.swimlane.id),a.stopPropagation()},n.toggleEdit=function(n,a){n.stopPropagation(),a.$edit?a.cancelEdit():a.edit()}}}}),angular.module("component.task-groups.task-group").directive("deltaDragHandler",["$window",function(n){function a(n){var a=n.touches[0];return a.preventDefault=function(){n.preventDefault()},a}function t(n,t){function s(t){function s(n,a,t){var e=n.pageX-p+l.element.scrollLeft-m,s=n.pageY-u+l.element.scrollTop-g;a(e,s,t),d=n}function i(a){o.$moved||(o.$moved=!0,n.css("z-index",9999),e.css("cursor","pointer"),o.start(),l&&l.watchMouse(function(){s(d,o.move,!0)})),s(a,o.move)}function r(n){i(a(n))}function c(){e.unbind("mousemove",i),e.unbind("touchmove",r),e.unbind("mouseup",c),e.unbind("toucheEnd",c),o.$moved?(o.$moved=!1,e.css("cursor","default"),n.css("z-index",0),l&&l.stopWatching(),s(d,o.stop)):o.simpleClick()}var d=t,p=t.pageX,u=t.pageY,m=l.element.scrollLeft,g=l.element.scrollTop;e.bind("mousemove",i),e.bind("touchmove",r),e.bind("mouseup",c),e.bind("touchend",c),t.preventDefault()}angular.extend(this,t);var o=this,l=t.scrollableElement;n.bind("mousedown",s),n.bind("touchstart",function(n){s(a(n))})}var e=angular.element(n.document.documentElement);return function(n,a,e){var s=n.$watch(e.deltaDragHandler,function(n){s(),n.disabled||new t(a,n)})}}]),angular.module("component.task-groups.task-group").directive("resizeButton",["$window",function(n){var a=angular.element(n.document.documentElement),t=angular.element(n.document.body);return function(n,e,s){function o(){a.unbind("mouseup",o),a.unbind("touchend",o),n[s.resizeButton]=!1,t.css("cursor","default")}function l(){a.bind("mouseup",o),a.bind("touchend",o),n[s.resizeButton]=!0,n.resize=!0,t.css("cursor","col-resize")}e.bind("mousedown",l),e.bind("touchstart",l)}}]),angular.module("component.task-groups.task-group").directive("taskGroup",["$timeout","$window","taskGroupModal",function(n,a,t){function e(n,a){var t=Math.abs(n%1);return 1-a>=t&&t>=a?n:Math.round(n)}var s=.2;return{replace:!0,transclude:!0,scope:{group:"=",width:"=",settings:"=",columns:"="},require:["^taskGroupList","^scrollableElement"],link:function(n,a,o,l){function i(n){a.css({"margin-left":n*p+"px"})}function r(n){a.css("width",n*p+"px")}var c=l[0],d=l[1],p=n.width;n.$watch("group.$lineSpace",i),n.$watch("group.width",r),n.$watch("group.$recalculated",function(a){a&&(delete n.group.$recalculated,c.recalculatePositions())});var u=n.group;n.$watch("group.$highlightedGroup",function(n){n&&c.highlightGroup(u)});var m,g,h,f,k=!1;n.dragHandler={simpleClick:function(){u.$expandedGroup?t.open(u,n.settings).result.then(function(){u.remove(),c.removeGroup(u)}):c.cleanExpanded(u),c.highlightGroup(u)},scrollableElement:d,start:function(){n.settings.readOnly||(n.$apply(function(){u.highlightTasks(!0),c.highlightGroup(u)}),h=a.clone(),h.children().css({borderColor:u.color}).addClass("opacity"),a.after(h).addClass("draggy"),h.parent().prepend(a),g=u.start,m=u.width,f=n.columns.length-(u.start+u.width))},move:function(t,o,l){if(!n.settings.readOnly){var c=a.prop("offsetHeight");h.parent().css({"margin-top":c+"px"}),a.css({"margin-top":-c+"px"});var d;if(d=l?t/p:e(t/p,s),d=Math.min(d,f),n.resize){k=!0;var v=m+d;v>=1&&(u.width=v)}else u.start=Math.max(0,g+d);i(u.start),r(u.width)}},stop:function(t){if(!n.settings.readOnly){var e=Math.round(t/p);e?(e=Math.min(e,f),k?(u.width=m+e,u.width<1&&(u.width=1),u.expand()):(u.start=g+e,u.start<=0?(u.start=0,u.shrink(-g)):u.shrink(e)),u.$lastTouched=!0):(u.width=m,u.start=g,i(u.start),r(u.width),k=!1),h.parent().css("margin-top",0),a.css("margin-top",0),a.after(h).removeClass("draggy"),h.remove(),c.recalculatePositions(),n.$apply()}}},n.getStyle=function(n,a){return{backgroundColor:a?n.color:angular.noop,borderColor:n.color}}},templateUrl:"app/component/task-groups/task-group/task-group.html"}}]),angular.module("component.task-groups.task-group-list",[]).directive("taskGroupList",function(){function n(n,a){a.$lineSpace=a.start-n.width,n.width=a.$width,delete a.$width,n.groups.push(a)}return{scope:{groups:"=",columns:"=",isExpanded:"=",settings:"="},replace:!0,controllerAs:"taskGroupList",templateUrl:"app/component/task-groups/task-group-list/task-group-list.html",controller:["$scope","$log",function(a,t){this.cleanExpanded=function(n){a.settings.allowGroupExpand&&(a.groups.forEach(function(n){n.highlightTasks(!1),delete n.$expandedGroup,delete n.$highlightedGroup}),n.$expandedGroup=!0,n.highlightTasks(!0),a.$apply())},this.addGroup=function(){a.$emit("kanban:add-group")},this.highlightGroup=function(n){a.groups.forEach(function(n){n.highlightTasks(!1),delete n.$highlightedGroup}),n.highlightTasks(!0),n.$highlightedGroup=!0,a.$evalAsync()},this.removeGroup=function(n){a.groups.splice(a.groups.indexOf(n),1),this.recalculatePositions()},this.recalculatePositions=function(){function e(){var n={width:0,groups:[]};return s.push(n),n}var s=[],o=a.columns.length,l=0;(a.groups||[]).map(function(n){return n}).filter(function(n){return n.start>o-1?(t.warn("Start position of group with id "+n.id+" is out of columns range"),!1):!0}).sort(function(n,a){return n.start>a.start?1:-1}).forEach(function(t){var i=!0;t.tasks.length||t.$emptyButPositioned||(a.columns[l]||(l=0),angular.isUndefined(t.start)&&(t.start=l,l++),t.width=t.width||1,t.$emptyButPositioned=!0),t.$width=t.start+t.width,s.forEach(function(a){i&&a.width<=t.start&&a.width<=o&&(n(a,t),i=!1)}),i&&n(e(),t)}),a.lines=s};var e=this;a.$watch("groups",function(n){n&&e.recalculatePositions()})}]}}),angular.module("component.task-groups.task-groups-button",[]).directive("taskGroupsButton",function(){return{replace:!0,scope:{value:"=",settings:"="},templateUrl:"app/component/task-groups/task-groups-button/task-groups-button.html"}}),angular.module("ie-9-fixes",[]).factory("fixIE9",["$window",function(n){var a=-1!==n.navigator.appVersion.indexOf("MSIE 9"),t=n.document;a&&(t.body.className=t.body.className+" lt-ie9");var e={"unselect-text":function(){if(t.selection&&t.selection.empty)t.selection.empty();else if(n.getSelection){var a=n.getSelection();a.removeAllRanges()}},"kanban-columns-fix":function(){angular.forEach(t.getElementsByClassName("kanban-board"),function(n){var a=Array.prototype.slice.call(n.querySelectorAll("[kanban-column]")),t=a.reduce(function(n,a){return a.scrollHeight>n?a.scrollHeight:n},0);angular.element(a).css("height",t+"px")})}};return function(n){a&&e[n]()}}]),angular.module("kanban").factory("globalOnEsc",["$window",function(n){var a=angular.element(n.document.body);return function(n){function t(a){27===a.which&&n()}return a.bind("keyup",t).bind("click",n),function(){a.unbind("keyup",t).unbind("click",n)}}}]),angular.module("component.is-touch",[]).provider("isTouch",function(){this.$get=["$window",function(n){return/Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile/.test(n.navigator.userAgent)}]}).factory("isNotTouch",["isTouch",function(n){return!n}]),angular.module("component.kanban-card").constant("kanbanCardFields",{rliDevType:!1,priority:!1,grade:!1,id:!1,notes:!1,flag:!1,mediaFlag:!1,preview:!1,primarySlot:!1,appRef:!1,appName:!1,resourceName:!1,assignees:!1,rating:!1,modifiedDate:!1,creationDate:!1,ownerAppLogo:!1,taskName:!1,description:!1,assignability:!1,type:!1,ownerName:!1,assigneeName:!1,ownerPicture:!1,state:!1}),angular.module("component.kanban-model").value("KanbanColumn",function(){function n(n){angular.extend(this,n)}return n.prototype={removeTask:function(n){var a=this.tasks.indexOf(n);-1!==a&&this.tasks.splice(a,1),this.swimlane.$tasksCount--},collapse:function(){this.$collapsed=!0,this.$disabled=!0},expand:function(){this.$collapsed=!1,this.$disabled=!1}},n}()),angular.module("component.kanban-model").factory("KanbanGroup",function(){function n(n){angular.extend(this,n)}return n.prototype={highlightTasks:function(n){this.tasks.forEach(function(a){a.$highlight=n})},shrink:function(n){this.tasks.forEach(function(a){a.moveToColumn(a.column.swimlane.columns[a.column.index+n],!0)})},expand:function(){var n={};this.tasks.forEach(function(a){n[a.column.swimlane.id]?n[a.column.swimlane.id].push(a):n[a.column.swimlane.id]=[a]});var a=this.start,t=this.width;angular.forEach(n,function(n){n.forEach(function(n,e){n.moveToColumn(n.column.swimlane.columns[a+e%t],!0)})})},recalculate:function(n){if(this.tasks.length){var a=Number.MAX_VALUE,t=0;this.tasks.forEach(function(n){var e=n.column.index;e>t&&(t=e),a>e&&(a=e)}),this.start=a,this.width=t-a+1}n||(this.$recalculated=!0)},remove:function(){this.tasks.forEach(function(n){n.removeFromColumn()})}},n}),angular.module("component.kanban-model").value("KanbanSwimlane",function(){function n(n){angular.extend(this,n)}return n.prototype={edit:function(){this.$edit=!0,this.$disabled=!0,this.columns.forEach(function(n){n.tasks.forEach(function(n){n.$edit=!0,n.$highlight=!1})})},cancelEdit:function(){this.$edit=!1,this.$disabled=!1,this.columns.forEach(function(n){n.tasks.forEach(function(n){n.$edit=!1})})}},n}()),angular.module("component.kanban-model").factory("KanbanTask",["$rootScope",function(n){function a(n){angular.extend(this,n),this.$uniqueId=t++}var t=0;return a.prototype={attachToGroup:function(n){n.tasks.push(this),this.group=n,this.groupId=n.id},attachToColumn:function(n,a){this.column=n,-1===n.tasks.indexOf(this)&&n.tasks.push(this),this.columnId=n.id,this.swimlaneId=n.swimlaneId,n.swimlane.$tasksCount++,angular.isDefined(this.group)&&!a&&this.group.recalculate()},removeFromColumn:function(){return this.column.removeTask(this),this},moveToColumn:function(a,t){a!==this.column&&(n.$broadcast("kanban:task:moved",this.id,this.column.id,a.id,this.column.swimlane.id,a.swimlane.id),this.removeFromColumn().attachToColumn(a,t))},replace:function(n){var t=new a(this);return angular.extend(t,n),this.column.tasks[this.column.tasks.indexOf(this)]=t,this.group&&(this.group.tasks[this.group.tasks.indexOf(this)]=t),this.$$remove(),t},$$remove:function(){this.group=void 0,this.column=t},remove:function(){return this.removeFromColumn(),this.group&&(this.group.tasks.splice(this.group.tasks.indexOf(this),1),this.group.recalculate()),this.$$remove(),this},clone:function(){var n=new a(this);return n.taskName+=" (Copy)",this.group&&this.group.tasks.push(n),this.column.tasks.push(n),this.column.swimlane.$tasksCount++,n}},a}]),angular.module("component.kanban-model").factory("generateKanbanModel",["KanbanGroup","KanbanTask","KanbanColumn","KanbanSwimlane",function(n,a,t,e){return function(s){var o=angular.copy(s);return o.$loaded=!1,angular.isDefined(s.tasks)&&angular.extend(o,{tasks:s.tasks.map(function(n){return new a(n)})}),angular.isDefined(s.groups)&&angular.extend(o,{groups:s.groups.map(function(a){return new n(a)})}),angular.isDefined(s.columns)&&angular.extend(o,{columns:s.columns.map(function(n){return new t(n)})}),angular.isDefined(s.swimlanes)&&angular.extend(o,{swimlanes:s.swimlanes.map(function(n){return new e(n)})}),angular.isDefined(o.groups)&&o.groups.forEach(function(n){n.tasks=[],n.tasks=o.tasks.filter(function(a){return a.groupId===n.id}),n.tasks.forEach(function(a){a.group=n})}),angular.isDefined(o.columns)&&o.columns.forEach(function(n,a){n.index=a}),angular.isDefined(o.swimlanes)&&o.swimlanes.forEach(function(n){n.columns=angular.copy(o.columns),n.columns.forEach(function(a){a.swimlane=n,a.tasks=o.tasks.filter(function(t){return t.columnId===a.id&&t.swimlaneId===n.id}),a.tasks.forEach(function(n){n.column=a})})}),angular.isDefined(o.groups)&&o.groups.forEach(function(n){angular.extend(n,{visible:!0,expanded:!0,groupId:n.id,members:n.tasks}),n.tasks.forEach(function(n){angular.extend(n,{createdDate:n.creationDate,title:n.resourceName})}),n.recalculate(!0)}),o.$loaded=!0,o}}]),angular.module("component.kanban-model").directive("kanbanModel",["generateKanbanModel","KanbanTask","$parse",function(n,a,t){return function(e,s,o){e.$on("addToGroup",function(n,s,l){var i=t(o.model)(e),r=i.swimlanes[0].columns[0];l=new a(l),l.attachToGroup(s),l.attachToColumn(r),i.tasks.push(l),l.resourceName=l.title.text,s.recalculate()}),e.$on("update:kanban:card",function(n,a){var s=t(o.config+".tasks")(e);if(s&&s.length&&a&&a.id){var l=s.filter(function(n){return n.id===a.id})[0],i=t(o.model+".tasks")(e),r=i.filter(function(n){return n.id===a.id})[0];l&&r&&(i[i.indexOf(r)]=r.replace(angular.extend(l,a)))}}),e.$watch(o.config,function(a){var s=t(o.model);a?s.assign(e,n(a)):s.assign(e,null)})}}]),angular.module("component.sanitize-filter",["ngSanitize"]).filter("sanitize",["$sce",function(n){return function(a){return n.trustAsHtml(a)}}]),angular.module("component.scrollable-element").factory("ScrollableElementFactory",["$interval",function(n){function a(n){this.fn=n}var t=16.66,e=25;return a.prototype={stopInterval:function(){this.interval&&(n.cancel(this.interval),this.interval=null)},dotReady:function(){return this.x||this.y},minValue:function(n){return n&&(n=n>0?Math.max(n,e):Math.min(n,-e)),n},runInterval:function(){var a=this;this.interval||(this.interval=n(function(){a.dotReady()?a.fn(a.minValue(a.x),a.minValue(a.y)):a.stopInterval()},t,0,!1))},scrollIfNecessary:function(n){this.calculateDot(n),this.dotReady()&&this.runInterval()}},a}]),angular.module("component.modals.confirmation-modal",["mm.foundation.modal","template/modal/backdrop.html","template/modal/window.html"]).factory("openConfirmationModal",["$modal",function(n){return function(a){var t=n.open({windowClass:"tiny confirmation-modal",templateUrl:"app/component/modals/confirmation-modal/confirmation-modal.html"});return a&&a.$on("$destroy",function(){t&&t.dismiss("cancel")}),t.result.finally(function(){t=null})}}]),angular.module("component.modals.task-card-modal",["mm.foundation.modal","template/modal/backdrop.html","template/modal/window.html"]).factory("openTaskCard",["$modal",function(n){return function(a,t){return n.open({windowClass:"tiny task-card-modal",templateUrl:"app/component/modals/task-card-modal/task-card-modal.html",controller:"TaskCardModalController",resolve:{task:function(){return a},settings:function(){return t}}}).result}}]).controller("TaskCardModalController",["$scope","$rootScope","$modalInstance","$location","task","settings",function(n,a,t,e,s,o){n.cancel=function(){t.dismiss("cancel")},n.task=s,n.settings=o,n.copy=function(n){n.clone(),t.dismiss("cancel")},n.removeCard=function(n){n.remove(),a.$broadcast("kanban:task:remove",n.id),t.dismiss("cancel")},n.openURL=function(n){a.$broadcast("kanban:openURL",n.resourceId)}}]),angular.module("component.modal.task-group-modal",["mm.foundation.modal","template/modal/backdrop.html","template/modal/window.html"]).factory("taskGroupModal",["$modal",function(n){return{open:function(a,t){return n.open({windowClass:"tiny task-group-modal",templateUrl:"app/component/modals/task-group-modal/task-group-modal.html",resolve:{group:function(){return a},settings:function(){return t}},controllerAs:"modal",controller:["$scope","$modalInstance","group","settings",function(n,a,t,e){this.settings=e,this.group=t,this.cancel=function(){a.dismiss("cancel")},this.delete=function(){a.close("delete")}}]})}}}]),angular.module("kanban.templates").run(["$templateCache",function(n){n.put("app/kanban.html",'<div class="kanban"\n     ng-class="{\'kanban-read-only\': config.settings.readOnly,\n                \'kanban-touch\': isTouch}"\n     ng-show="config.$loaded"\n     combine-horizontal-scrolls>\n    <kanban-header groups="config.groups"\n                   columns="config.columns"\n                   settings="config.settings">\n    </kanban-header>\n    <swim-lane id="swimlane-{{::$index}}"\n               ng-repeat="swimlane in config.swimlanes"\n               swimlane="swimlane"\n               groups="config.groups"\n               settings="config.settings"\n               ng-init="swimlane.index = $index">\n    </swim-lane>\n</div>'),n.put("app/component/add-dropdown/add-dropdown.html",'<div class="add-dropdown" ng-class="{\'no-groups\': !groups.length}">\n    <button class="button" dropdown-toggle="#add-choices">Add New\n        <glyph-icon icon="\'glyph-chevron-collapsed\'"></glyph-icon>\n        <glyph-icon icon="\'glyph-chevron-expanded\'"></glyph-icon>\n    </button>\n    <ul id="add-choices" class="add-dropdown-list">\n        <li ng-repeat="linkItem in settings.addResourceLinks" class="add-dropdown-item">\n            <a href="{{linkItem.link}}" target="_blank">{{linkItem.linkText}}</a>\n        </li>\n    </ul>\n</div>'),n.put("app/component/add-new-control/add-new-control.html",'<div class="add-menu-control text-right">\n    <button ng-click="menuVisible = !menuVisible" class="menu-width">\n        Add new\n    </button>\n    <div ng-show="menuVisible" ng-click="menuVisible = false" class="menu-width menu-items">\n        <div ng-click="addGroup()" class="menu-item">Add group</div>\n        <div ng-click="addTask()" class="menu-item">Add task</div>\n    </div>\n</div>\n'),n.put("app/component/column-names/column-names.html",'<div class="column-names">\n    <div class="column-name" ng-repeat="column in columns" ng-class="{\'column-name-collapsed\' : column.$collapsed}" ng-click="toggleColumn(column)">\n        <div class="tooltip-area" ng-show="column.$collapsed" tooltip="{{column.name}}" tooltip-animation="false" tooltip-placement="bottom" tooltip-append-to-body="true" tooltip-trigger="mouseenter"></div>\n        <span class="column-toggle-icon" ng-show="settings.showHideColumns">\n            <span class="glyph-icon priority-icon">\n                <span class="glyph-contract3" ng-hide="column.$collapsed"></span>\n                <span class="glyph-expand3" ng-show="column.$collapsed"></span>\n            </span>\n        </span>\n        <span class="title" title="{{column.$collapsed ? column.name : \'\'}}">{{column.name}}</span>\n    </div>\n</div>'),n.put("app/component/glyph-icon/glyph-icon.html",'<span class="glyph-icon" ng-if="icon">\n    <span ng-class="icon"></span>\n</span>'),n.put("app/component/kanban-board/kanban-board.html",'<div class="kanban-board" horizontal-scroll scrollable-element ng-class="::{\'team-kanban\': swimlane.isTeam, \'not-team-kanban\': !swimlane.isTeam}"\n        ng-style="::{\'max-height\': settings.swimlaneMaxHeight || \'620px\'}">\n    <div class="empty-placeholder" ng-hide="swimlane.isTeam || swimlane.$tasksCount || settings.readOnly || settings.disableDefaultMessaging || settings.allowEmptySwimlanes">\n        <p>{{::swimlane.addAlertText}}</p>\n        <button class="button blue select-skills-button" ng-click="addResources()" ng-show="::swimlane.addButtonText">{{::swimlane.addButtonText}}</button>\n    </div>\n    <div class="team-message" ng-model="column.tasks" data-as-sortable="scrollCallbacks" ng-show="swimlane.isTeam">\n        Drop here to assign card to this team. <br/>\n        Card will remain in the same workflow state column.\n    </div>\n    <div class="kanban-wrapper">\n        <div ng-repeat="column in swimlane.columns"\n             kanban-column\n             class="kanban-clmn"\n             ng-model="column.tasks"\n             data-as-sortable="scrollCallbacks"\n             ng-class="{\'kanban-clmn-barred\': column.$barred, \'kanban-clmn-collapsed\': column.$collapsed}"\n             ng-if="!swimlane.isTeam"\n             is-disabled="{{swimlane.$disabled || settings.readOnly}}">\n        </div>\n    </div>\n</div>'),n.put("app/component/kanban-board/kanban-delete-message.html",'<div class="kanban-notify cg-notify-message cg-notify-message-center">{{$message}}</div>'),n.put("app/component/kanban-card/kanban-card.html",'<div class="card-wrapper" ng-lazy-click="clickCallbacks(task, $event, false)"\n     ng-mousedown="highlightTask(task, $event)"\n     data-as-sortable-item-handle>\n    <div class="card-color" ng-if="::groupColor" ng-style="::{\'background\': groupColor}"></div>\n    <button class="button card-button delete-card-button" type="button"\n            ng-click="deleteTask($event, task)"\n            ng-if="::!task.published"\n            ng-show="task.$edit">\n        <span class="glyph-icon"><span class="glyph-close"></span></span>\n    </button>\n    <div class="card-header">\n        <div class="card-handle"></div>\n        <div class="app-tag" ng-if="::fields.appRef">\n            <span class="glyph-icon card-icon"><span ng-class="::task.appRef"></span></span>\n        </div>\n        <div class="card-title" ng-if="::fields.appName">\n            <span class="card-name">{{::task.appName}}</span>\n        </div>\n        <div class="card-title" ng-if="::fields.rliDevType">\n            <span class="card-name">{{::task.rliDevType.name}}</span>\n        </div>\n    </div>\n    <div class="card-content">\n        <p class="task-name" ng-if="::fields.taskName" ng-bind-html="::task.taskName | sanitize"></p>\n        <p class="task-name" ng-if="::fields.primarySlot" ng-bind-html="::task.primarySlot | sanitize"></p>\n        <p class="task-description" ng-if="::fields.description">{{::task.description}}</p>\n        <hr class="card-divider" ng-if="::(fields.taskName || fields.primarySlot)"/>\n        <p ng-if="::fields.ownerAppLogo"><img class="owner-logo" ng-src="{{::task.ownerAppLogo}}"/></p>\n        <p ng-if="::fields.assignees" ng-style="::{color: task.assigneesColor}">\n            <span class="task-assignee">{{::task.assignees}}</span>\n        </p>\n        <div class="additional-details">\n            <div class="task-owner" ng-if="::fields.assigneeName">\n                <p class="owner-avatar" ng-if="::fields.ownerPicture"><img ng-src="{{::task.ownerPicture}}"/></p>\n                <p class="owner-name">{{::task.assigneeName}}</p>\n            </div>\n            <p ng-if="::fields.rating">\n                <star-rating value="::task.rating"></star-rating>\n            </p>\n            <p ng-if="::fields.state" class="text-bold text-grey">\n                <span>{{::task.state}}</span>\n                <span ng-if="::fields.assignability">&nbsp;-&nbsp;Locked</span>\n                <span class="glyph-icon card-icon" ng-if="::task.assignability"><span class="glyph-lock3"></span></span>\n            </p>\n            <!--we don\'t need to show task.id, but alfrescoDbId, and only if it exists 18.12.2015 -->\n            <p ng-if="::task.alfrescoDbId"><span class="text-grey text-left">ID#&nbsp;</span>{{::task.alfrescoDbId}}</p>\n            <p ng-if="::fields.grade">\n                    <span class="text-grey text-left">Grade&nbsp;</span>\n                    <span ng-repeat="grade in ::task.grades">{{::grade.name}}{{::$last ? \'\' : \', \'}}</span>\n            </p>\n            <p ng-if="::fields.notes" class="text-grey">\n                <span>{{task.notes | limitTo: limit}} </span>\n                <span class="card-ellipsis" ng-show="task.notes.length > limit" ng-click="showFullDescription(task, settings, $event)">[&hellip;]</span>\n            </p>\n            <p ng-if="::fields.ownerName"><span class="text-bold">Owner:&nbsp;</span>{{::task.ownerName}}</p>\n            <p ng-if="::fields.type"><span class="text-bold">Type:&nbsp;</span>{{::task.type}}</p>\n            <p ng-if="::fields.assignability"><span class="text-bold">Assignability:&nbsp;</span><span>{{::task.assignability ? \'Locked\' : \'Available\'}}</span></p>\n            <p ng-if="::fields.creationDate" class="task-date"><span class="text-grey text-bold">Created:&nbsp;</span>{{::task.creationDate | date : "MMM d, y \'at\' h:mma"}}<p>\n            <p ng-if="::fields.modifiedDate" class="task-date"><span class="text-grey text-bold">Modified:&nbsp;</span>{{::task.modifiedDate | date : "MMM d, y \'at\' h:mma"}}</p>\n            <div class="card-footer clearfix" ng-if="::(fields.priority || fields.flag || fields.preview)">\n                <hr class="card-divider"/>\n                <p ng-if="::fields.priority" class="text-left"><priority-level value="::task.priority._id"></priority-level></p>\n                <div class="text-right">\n                    <span class="glyph-icon card-icon" ng-if="::(fields.flag || fields.mediaFlag)">\n                        <span class="task-flag glyph-flag" ng-if="::(task.flag._id === \'AUTHFLAG_TRUE\')"></span>\n                        <span class="task-flag glyph-images2" ng-if="::(task.mediaFlag._id === \'MEDFLAG_TRUE\')"></span>\n                    </span>\n                    <button ng-if="::(fields.preview && task.preview)" type="button" class="button card-preview"\n                            ng-lazy-click="clickCallbacks(task, $event, true)">\n                        <span class="glyph-icon"><span class="glyph-eye"></span></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="edit-wrapper"></div>\n</div>\n'),n.put("app/component/kanban-card/tip-template.html",'<div>\n    <div class="skills-title">\n        {{::skills.length - 1}} Skill<span ng-show="::skills.length !== 2">s</span>\n    </div>\n    <div class="skills-description">\n        <div ng-repeat="skill in skills" class="clearfix" ng-show="$index">\n            <span class="title" ng-bind-html="skill.name"></span>\n        </div>\n    </div>\n</div>'),n.put("app/component/kanban-column/kanban-column.html",'<div class="kanban-clmn-warning">\n    <glyph-icon icon="\'glyph-warning2\'"></glyph-icon>\n    {{::settings.barredColumnMessage}}\n</div>\n<kanban-card class="kanban-card as-sortable-item"\n             ng-repeat="task in column.tasks | limitTo: limit track by task.$uniqueId"\n             data-as-sortable-item></kanban-card>\n'),n.put("app/component/kanban-header/kanban-header.html",'<add-dropdown settings="settings" groups="groups" ng-show="settings.showAddNew"></add-dropdown>\n<div class="kanban-header-wrapper" sticky-header>\n    <scrollbar columns="columns" horizontal-scroll></scrollbar>\n    <div class="kanban-header" scrollable-element horizontal-scroll>\n        <column-names columns="columns" settings="settings"></column-names>\n        <task-group-list expand-collapse="expanded"\n                         expand-disabled="settings.readOnly"\n                         class="task-groups"\n                         ng-hide="settings.hideGroups"\n                         groups="groups"\n                         columns="columns"\n                         settings="settings"\n                         columns-width></task-group-list>\n    </div>\n    <task-groups-button value="expanded" ng-init="expanded = true" settings="settings" ng-hide="settings.hideGroups"></task-groups-button>\n</div>'),n.put("app/component/priority-level/priority-level.html",'<div class="priority-level" ng-switch on="::value">\n    <div class="high-priority" ng-switch-when="AUTHPRI_HIGH">\n        High&nbsp;\n        <span class="glyph-icon priority-icon">\n            <span class="glyph-circle2"></span>\n            <span class="glyph-circle2"></span>\n            <span class="glyph-circle2"></span>\n        </span>\n    </div>\n    <div class="medium-priority" ng-switch-when="AUTHPRI_MED">\n        Medium&nbsp;\n        <span class="glyph-icon priority-icon">\n            <span class="glyph-circle2"></span>\n            <span class="glyph-circle2"></span>\n        </span>\n    </div>\n    <div class="low-priority" ng-switch-when="AUTHPRI_LOW">\n        Low&nbsp;\n        <span class="glyph-icon priority-icon">\n            <span class="glyph-circle2"></span>\n        </span>\n    </div>\n</div>'),n.put("app/component/scroll-bar/scroll-bar.html",'<div class="scroll-bar">\n    <div class="clmn" ng-repeat="column in columns" ng-class="{\'clmn-collapsed\': column.$collapsed}"></div>\n</div>'),n.put("app/component/star-rating/star-rating.html",'<ul class="star-rating">\n    <li ng-repeat="star in stars" class="star-list" ng-class="star">\n        <span class="glyph-icon"><i class="glyph-star3"></i></span>\n    </li>\n</ul>'),n.put("app/component/swim-lane/swim-lane.html",'<div class="swim-lane" ng-class="{\'empty\': !swimlane.$tasksCount && !settings.allowEmptySwimlanes, \'no-groups\': !groups.length, \'edit\': swimlane.$edit}">\n    <div class="swim-lane-header swim-lane-toggle" ng-click="toggleCollapse()">\n    <span class="glyph-icon" ng-hide="settings.readOnly">\n        <span ng-class="{\'glyph-chevron-expanded\': swimlane.collapsed, \'glyph-chevron-collapsed\': !swimlane.collapsed}"></span>\n    </span>\n        <span class="swim-title">\n            <span ng-show="::swimlane.isTeam">Assign To </span>\n            {{swimlane.name}}\n        </span>\n        <span class="swim-length" ng-hide="::swimlane.isTeam">({{swimlane.$tasksCount}})</span>\n        <span class="swim-loading" ng-show="swimlane.$loading">Loading &hellip;</span>\n        <div class="add-resource-button" ng-show="!settings.readOnly && swimlane.addResourcesButtonText" ng-click="addResource($event)">\n            <span class="glyph-icon"><i class="glyph-plus-circle2"></i></span>\n            <button class="button">{{swimlane.addResourcesButtonText}}</button>\n        </div>\n        <div class="edit-tasks-button" ng-hide="swimlane.isTeam || settings.readOnly || !settings.editableSwimlanes" ng-click="toggleEdit($event, swimlane)">\n            <button class="button" type="button">{{swimlane.$edit ? \'Done\' : \'Edit Tasks\'}}</button>\n        </div>\n        <span class="swim-sub-title">{{swimlane.subText}}</span>\n    </div>\n    <kanban-board swimlane="swimlane" expand-collapse="!swimlane.collapsed" expand-disabled="settings.readOnly" settings="settings" limit="cardLimit"></kanban-board>\n</div>'),n.put("app/demo-code/groups-debug/groups-debug.html",'<div class="kanban-debug" ng-show="groups.length">\n    <button ng-click="showDebug = !showDebug">show debug</button>\n    <div ng-repeat="group in groups" ng-click="showGroup = !showGroup" ng-init="showGroup=true" ng-show="showDebug">\n        <b class="group-name">\n            {{::group.groupName}}\n            [tasks: <span opacity-on-changed="group.tasks.length" set-text="true"></span>,\n            width: <span opacity-on-changed="group.width" set-text="true"></span>]\n        </b>\n        <div ng-repeat="task in group.tasks" ng-show="showGroup">\n            <b>{{task.taskName}}</b>\n            column: <i opacity-on-changed="task.column.name" set-text="true"></i>\n        </div>\n    </div>\n</div>\n'),n.put("app/demo-code/layout-switcher/demo-modal.html",'<iframe src="http://pudtsj.axshare.com/dropbox.html" height="3700" width="1000"></iframe>'),n.put("app/demo-code/layout-switcher/layout-switcher.html",'<div class="layout-switcher">\n    <a ng-click="isOpened = true" ng-hide="isOpened">expand layout-switcher</a>\n    <a ng-click="isOpened = false" ng-show="isOpened">minimize layout-switcher</a>\n\n    <div ng-show="isOpened" class="opacity-area">\n        <label><input type="radio" ng-model="hash.contentLevel" value="minimum"/>Minimum Content Level</label>\n        <label><input type="radio" ng-model="hash.contentLevel" value="medium"/>Medium Content Level</label>\n        <label><input type="radio" ng-model="hash.contentLevel" value="maximum"/>Maximum Content Level</label>\n        <hr/>\n        <label><input type="radio" ng-model="hash.layout" value="planner"/>Planner</label>\n        <label><input type="radio" ng-model="hash.layout" value="planner-no-tasks"/>Planner [no tasks]</label>\n        <label><input type="radio" ng-model="hash.layout" value="empty-planner"/>Empty planner</label>\n        <label><input type="radio" ng-model="hash.layout" value="work-tracker"/>Work Tracker</label>\n        <label><input type="radio" ng-model="hash.layout" value="work-tracker-perf"/>Work Tracker 1000</label>\n        <label><input type="radio" ng-model="hash.layout" value="empty-work-tracker"/>Empty Work Tracker</label>\n        <hr/>\n        <label><input type="checkbox" ng-model="hash.readOnly"/>Read Only</label>\n        <label><input type="checkbox" ng-model="hash.empty"/>Empty State</label>\n        <button ng-click="updateCard()" ng-show="!hash.empty && hash.layout === \'work-tracker\'">update first card</button>\n    </div>\n</div>\n'),n.put("app/component/modals/confirmation-modal/confirmation-modal.html",'<h2 class="modal-title">Delete Card\n    <a class="close-reveal-modal" ng-click="$dismiss()">&#215;</a>\n</h2>\n<div class="wrapper">\n    <div class="modal-row">\n        <div class="small-12 columns content">\n            <glyph-icon icon="\'glyph-warning\'" class="icon"></glyph-icon>\n            You may want to confirm you\'ve selected the right card details by opening the dropbox.\n            Do you still want to delete card?\n        </div>\n    </div>\n    <div class="modal-row">\n        <div class="column footer">\n            <button class="button" ng-click="$close()">Yes</button>\n            <button class="button" ng-click="$dismiss()">No</button>\n        </div>\n    </div>\n</div>'),n.put("app/component/modals/task-card-modal/task-card-modal.html",'<h2 class="modal-title">{{settings.taskModalWindowTitle}}\n    <a class="close-reveal-modal" ng-click="cancel()">&#215;</a>\n</h2>\n<div class="wrapper">\n    <div class="row">\n        <div class="column small-12">\n            <div class="header">\n                <div class="app-tag" ng-show="task.appRef">\n                    <glyph-icon icon="task.appRef" class="card-icon"></glyph-icon>\n                </div>\n                <div class="title" ng-show="settings.tasksDisplayFields.appName">{{task.appName}}</div>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="column small-12">\n            <div class="name">\n                <span ng-show="settings.tasksDisplayFields.resourceName" ng-bind-html="task.resourceName | sanitize"></span>\n                <span ng-show="settings.tasksDisplayFields.skillShortName" ng-bind-html="task.skillShortName | sanitize"></span>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="column small-12 toolbar">\n            <button ng-if="settings.allowCopyTask && !settings.readOnly" class="button white toolbar-button" ng-click="copy(task)">\n                <span class="glyph-icon tollbar-icon"><span class="glyph-copy4"></span></span>\n                <span>Copy</span>\n            </button>\n            <button ng-if="settings.allowDeleteTask && !settings.readOnly" class="button white toolbar-button" ng-click="removeCard(task)">\n                <span class="glyph-icon tollbar-icon"><span class="glyph-remove"></span></span>\n                <span>Delete</span>\n            </button>\n            <button ng-if="task.resourceId" class="button white toolbar-button" ng-click="openURL(task)">\n                <span class="glyph-icon tollbar-icon"><span class="glyph-externallink"></span></span>\n                <span>View</span>\n            </button>\n        </div>\n    </div>\n    <div ng-show="settings.tasksDisplayFields.description" class="row">\n        <div class="column small-12">\n            <div class="description">\n                <!--<h3 class="legend"><span>Description</span></h3>-->\n                <hr class="modal-divider"/>\n                <p class="description">{{task.description}}</p>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="column small-12">\n            <div class="details">\n                <!--<h3 class="legend"><span>Details</span></h3>-->\n                <hr class="modal-divider"/>\n                <div class="row">\n                    <div class="column medium-6">\n                        <p class="task-field" ng-show="settings.tasksDisplayFields.ownerAppLogo">\n                            <img class="owner-logo" ng-src="{{task.ownerAppLogo}}"/></p>\n                        <p class="task-field" ng-show="settings.tasksDisplayFields.ownerName">\n                            <span class="field-label">Owner:&nbsp;</span>\n                            <span>{{task.ownerName}}</span></p>\n                        <p class="task-field" ng-show="settings.tasksDisplayFields.assigneeName">\n                            <span class="field-label">Assignee:&nbsp;</span>\n                            <span>{{task.assigneeName}}</span></p>\n                        <p class="task-field assignees" ng-show="settings.tasksDisplayFields.assignees">\n                            <span ng-style="{color: task.assigneesColor}">{{task.assignees}}</span></p>\n                        <p class="task-field" ng-show="settings.tasksDisplayFields.type">\n                            <span class="field-label">Task Type:&nbsp;</span>\n                            <span>{{task.type}}</span></p>\n                        <p class="task-field" ng-show="settings.tasksDisplayFields.state">\n                            <span class="field-label">Status:&nbsp;</span>\n                            <span>{{task.state}}</span></p>\n                        <p class="task-field" ng-show="settings.tasksDisplayFields.id">\n                            <span class="field-label">ID#&nbsp;</span>\n                            <span>{{task.id}}</span></p>\n                        <p class="task-field" ng-show="settings.tasksDisplayFields.grade">\n                            <span class="field-label">Grade&nbsp;</span>\n                            <span ng-repeat="grade in task.grades">{{grade.name}}{{$last ? \'\' : \', \'}}</span></p>\n                        <p class="task-field" ng-show="settings.tasksDisplayFields.priority">\n                            <priority-level value="task.priority._id"></priority-level></p>\n                    </div>\n                    <div class="column medium-6">\n                        <p class="task-field" ng-show="settings.tasksDisplayFields.creationDate">\n                            <span class="field-label">Created:</span>\n                            <span>{{task.creationDate | date : "MMM d, y \'/\' h:mm a"}}</span></p>\n                        <p class="task-field" ng-show="settings.tasksDisplayFields.modifiedDate">\n                            <span class="field-label">Modified:</span>\n                            <span>{{task.modifiedDate | date : "MMM d, y \'/\' h:mm a"}}</span></p>\n                        <p class="task-field" ng-show="settings.tasksDisplayFields.assignability">\n                            <span class="field-label">Assignability:</span>\n                            <span>{{task.assignability}}</span></p>\n                        <p class="task-field" ng-show="settings.tasksDisplayFields.rating">\n                            <star-rating value="task.rating"></star-rating></p>\n                        <p class="task-field" ng-show="settings.tasksDisplayFields.notes">\n                            <span>{{task.notes}}</span></p>\n                    </div>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="column footer">\n            <button class="button" ng-click="cancel()">Close</button>\n        </div>\n    </div>\n</div>\n'),n.put("app/component/modals/task-group-modal/task-group-modal.html",'<h2 class="modal-title">Task Group Information\n    <a class="close-reveal-modal" ng-click="modal.cancel()">&#215;</a>\n</h2>\n<div class="wrapper">\n    <div class="row">\n        <div class="column small-12">\n            <div class="header" ng-style="::{color: modal.group.color}">\n                <div class="group-icon">\n                    <glyph-icon icon="modal.group.appRef" class="card-icon"></glyph-icon>\n                </div>\n                <span class="group-name">{{::modal.group.groupName}}</span>\n            </div>\n        </div>\n    </div>\n    <div class="row description" ng-hide="modal.settings.readOnly">\n        <div class="column small-12">\n            <button class="button white delete-button" ng-click="modal.delete()"><span class="glyph-icon tollbar-icon"><span class="glyph-remove"></span></span><span>Delete Task Group</span></button>\n        </div>\n    </div>\n    <div class="row details">\n        <div class="column small-12">\n            <h3 class="legend"><span>Details</span></h3>\n            <br/>\n        </div>\n        <div class="column small-6 info">\n            <div class="group-info">\n                <div class="info-label-very-bold">Master {{modal.group.masterName}}</div>\n            </div>\n            <div class="group-info">\n                <div><span class="info-label">Owner: </span>{{modal.group.ownerName}}</div>\n            </div>\n            <div class="group-info">\n                <span class="info-label">Status: </span>\n                <span class="status" ng-class="{Completed: \'complete\'}[modal.group.state]">{{::modal.group.state}}</span>\n            </div>\n\n        </div>\n        <div class="column small-6 info">\n            <div class="group-info">\n                <div><span class="info-label">Created:</span> {{::modal.group.creationDate | date : "MM-dd-yyyy h:mm a"\n                    | lowercase}}\n                </div>\n            </div>\n            <div class="group-info">\n                <div><span class="info-label">Modified:</span> {{::modal.group.modifiedDate | date : "MM-dd-yyyy h:mm a"\n                    | lowercase}}\n                </div>\n            </div>\n\n        </div>\n    </div>\n    <div class="row">\n        <div class="column footer">\n            <button class="button" ng-click="modal.cancel()">Close</button>\n        </div>\n    </div>\n</div>'),n.put("app/component/task-groups/task-group/task-group.html",'<div class="task-group" delta-drag-handler="dragHandler" ng-class="{\'opacity\': group.opacity, \'expanded-group\': group.$expandedGroup, \'highlighted-group\': group.$highlightedGroup}">\n    <div class="task-group-content" ng-style="getStyle(group, group.$highlightedGroup)">\n        <div class="task-group-color" ng-style="{\'background\': group.color}"></div>\n        <div class="drag-button" ng-hide="settings.readOnly">\n            <span class="gl-drag-indicator-kanban"></span>\n        </div>\n\n        <div class="after-button-area" >\n            <div class="group-name">\n                <glyph-icon icon="group.appRef" class="card-icon"></glyph-icon>\n                <span ng-bind-html="::group.groupName | sanitize"></span>\n                <span class="unbold">({{group.tasks.length}})</span>\n            </div>\n            <div class="info">\n                <div class="group-info">\n                    <div>Master {{group.masterName}}</div>\n                    <div>Owner: {{group.ownerName}}</div>\n                </div>\n                <div class="group-info secondary">\n                    <div>Created: {{::group.creationDate | date : "MM/dd/yy h:mm a" | lowercase}}</div>\n                    <div>Modified: {{::group.modifiedDate | date : "MM/dd/yy h:mm a"  | lowercase}}</div>\n                </div>\n                <div class="group-info status" ng-class="{Completed: \'complete\'}[group.state]">\n                    <div>{{group.state}}</div>\n                </div>\n            </div>\n        </div>\n\n        <div ng-hide="settings.readOnly" resize-button="resize" class="resize-button" expand-area>\n            <glyph-icon icon="\'glyph-arrow7\'"></glyph-icon>\n        </div>\n\n    </div>\n</div>'),n.put("app/component/task-groups/task-group-list/task-group-list.html",'<div class="task-group-list">\n    <div class="white-line-wrapper">\n        <div class="white-line" ng-repeat="column in columns" ></div>\n    </div>\n\n    <div ng-repeat="line in lines" class="task-group-line">\n        <task-group group="group" width="228" columns="columns" ng-repeat="group in line.groups track by group.id" settings="settings"></task-group>\n    </div>\n    <div class="task-group-empty" ng-hide="lines.length || settings.readOnly || settings.disableDefaultMessaging">\n        <p>You haven\'t selected any {{settings.groupContentType}}</p>\n        <p><a ng-click="taskGroupList.addGroup()">Go back</a><span>&nbsp;to add {{settings.groupContentType}}</span></p>\n    </div>\n</div>'),n.put("app/component/task-groups/task-groups-button/task-groups-button.html",'<div class="text-center task-groups-button">\n    <button ng-click="value = !value">\n        <glyph-icon icon="value ? \'glyph-chevron-collapsed\'  : \'glyph-chevron-expanded\' "></glyph-icon>\n        {{value ? settings.groupsCollapseButtonText : settings.groupsExpandButtonText}}\n    </button>\n</div>')
}]),angular.module("kanban-constant",[]).constant("name","kanban").constant("version","0.0.293").constant("description","rl-kanban").constant("scripts",{start:"node node_modules/gulp/bin/gulp.js serve",build:"node node_modules/gulp/bin/gulp.js build"}).constant("homepage","http://rl-kanban.bitballoon.com/#?layout=work-tracker&contentLevel=maximum").constant("devDependencies",{angular:"1.7.9","angular-resource":"1.3.2","angular-sanitize":"1.3.2","angular-animate":"1.3.2","angular-touch":"1.3.2",commander:"^2.6.0",gulp:"~3.9.0","gulp-angular-templatecache":"~1.5.0","gulp-autoprefixer":"~2.1.0","gulp-clean":"~0.3.1","gulp-clone":"~1.0.0","gulp-connect":"~2.2.0","gulp-copy":"0.0.2","gulp-css-url-adjuster":"~0.2.3","gulp-inject":"~1.0.2","gulp-jshint":"~1.9.0","gulp-jshint-xml-file-reporter":"^0.5.1","gulp-livereload":"~3.2.0","gulp-minify-css":"~0.3.11","gulp-minify-html":"~0.1.7","gulp-ng-annotate":"~0.4.3","gulp-ng-config":"~1.0.0","gulp-nightwatch":"^0.2.6","gulp-notify":"^2.2.0","gulp-open":"~0.2.8","gulp-processhtml":"^1.0.2","gulp-protractor":"^1.0.0","gulp-rename":"~1.2.0","gulp-sass":"~4.0.2","gulp-sourcemaps":"~1.2.8","gulp-uglify":"~1.0.2","gulp-usemin":"~0.3.8","gulp-util":"^3.0.4","gulp-ver":"~0.1.0","jasmine-reporters":"^2.0.7","jshint-stylish":"~1.0.0",karma:"~0.12.24","karma-chrome-launcher":"~0.1.2","karma-coverage":"~0.2.7","karma-jasmine":"~0.2.3","karma-js-coverage":"~0.2.0","karma-junit-reporter":"^0.3.8","karma-ng-html2js-preprocessor":"~0.1.0","karma-ng-json2js-preprocessor":"^1.1.1","karma-phantomjs-launcher":"~0.1.2",phantomjs:"~1.9.15",protractor:"^3.0.0","run-sequence":"~1.0.2",underscore:"1.7.0"}).constant("kanbanVersion","0.0.293");
//# sourceMappingURL=../js/rlkanban.min.js.map