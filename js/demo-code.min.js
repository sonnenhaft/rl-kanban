angular.module("package-version",[]).directive("packageVersion",["$http","$injector","$q",function(e,t,n){function o(){return e.get("package.json").then(function(e){return e.data.version})}return{restrict:"A",scope:{key:"@packageVersion"},transclude:!0,template:'<div class="text-right grey-text"><span class="name" ng-transclude></span>&nbsp;&nbsp;<b>v{{version}}</b></div>',link:function(e){n.when(t.get(e.key)||o()).then(function(t){e.version=t})}}}]),angular.module("kanban-demo",["package-version","demo-code.events-debugger","demo-code.layout-switcher","demo-code.groups-debug","kanban"]),angular.module("demo-code.groups-debug",[]),angular.module("demo-code.layout-switcher",["mm.foundation.modal","template/modal/backdrop.html","template/modal/window.html"]),angular.module("demo-code.events-debugger",["component.is-touch","cgNotify"]).directive("eventsDebugger",["eventsToDebug","notify","$log","isTouch",function(e,t,n,o){return function(a){o||e.forEach(function(e){a.$on(e,function(){var o=Array.prototype.slice.call(arguments,1),a=e+" "+o.join(" ");n.info(a),t({message:a,duration:5e3,position:"right"})})})}}]).value("eventsToDebug",["kanban:task:start","kanban:task:stop","kanban:task:moved","kanban:task:orderchanged","kanban:task:remove","kanban:task:modalopen","kanban:add-group","kanban:add-task","kanban:add-task-assessment","kanban:column:hide","kanban:column:show"]),angular.module("demo-code.groups-debug").directive("groupsDebug",function(){return{templateUrl:"app/demo-code/groups-debug/groups-debug.html",scope:{groups:"="}}}),angular.module("demo-code.groups-debug").directive("opacityOnChanged",["$timeout",function(e){return function(t,n,o){t.$watch(o.opacityOnChanged,function(a){a&&(n.addClass("opacity-on-changed"),e(function(){n.removeClass("opacity-on-changed")},1e3,!1),o.setText?e(function(){n.text(a)},500,!1):t.$eval(o.evalAfter))})}}]),angular.module("demo-code.layout-switcher").controller("LayoutSwitcherDemoController",["$location","$scope","mockGetter","$modal","$q",function(e,t,n,o,a){t.locationSearch=e.search(),t.$watchCollection("locationSearch",function(e){a.all({layout:n.getLayout(e.layout||"work-tracker"),contentLevel:n.getContentLevel(/work-tracker/i.test(e.layout)?"work-tracker":"planner")}).then(function(n){t.config=angular.copy(n.layout),e.contentLevel&&(t.config.settings.tasksDisplayFields=n.contentLevel[e.contentLevel]),e.empty&&(t.config.groups=[],t.config.tasks=[]),t.config.settings&&(t.config.settings.readOnly=e.readOnly)})}),t.$on("kanban:task:moved",function(e,n){var o="555b6911ba6d349f6253cd85";t.kanbanModel.tasks.forEach(function(e){e.id===n&&e.validStates&&e.validStates.push(o)})}),t.$on("kanban:task:modalopen",function(){o.open({windowClass:"tiny task-card-modal-demo",templateUrl:"app/demo-code/layout-switcher/demo-modal.html"})})}]),angular.module("demo-code.layout-switcher").directive("layoutSwitcher",["$location","$rootScope","$window",function(e,t,n){return{templateUrl:"app/demo-code/layout-switcher/layout-switcher.html",scope:!0,link:function(o){o.hash=e.search(),o.hash.layout=o.hash.layout||"work-tracker",o.hash.contentLevel=o.hash.contentLevel||"maximum",["layout","contentLevel","readOnly","empty"].forEach(function(t){o.$watch("hash."+t,function(n){e.search(t,n||null)})}),o.isOpened="true"===n.localStorage.isOpened,o.$watch("isOpened",function(){n.localStorage.isOpened=o.isOpened}),o.updateCard=function(){t.$broadcast("update:kanban:card",{id:"8F6328",primarySlot:Math.random()+"",notes:Math.random()+""})}}}}]),angular.module("demo-code.layout-switcher").factory("mockGetter",["$http",function(e){function t(t,n){return e.get(t+n+".json").then(function(e){return e.data})}return{getLayout:function(e){return t("app/demo-code/layout-switcher/layouts/",e)},getContentLevel:function(e){return t("app/demo-code/layout-switcher/content-levels/",e)}}}]);
//# sourceMappingURL=../js/demo-code.min.js.map